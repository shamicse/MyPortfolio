// DOM Elements
const navToggle=document.getElementById('nav-toggle');
const navMenu=document.getElementById('nav-menu');
const navLinks=document.querySelectorAll('.nav-link');
const navbar=document.getElementById('navbar');
const contactForm=document.getElementById('contact-form');

// Mobile Navigation Toggle
navToggle.addEventListener('click', ()=> {
        navMenu.classList.toggle('active');
        navToggle.classList.toggle('active');
    });

// Close mobile menu when clicking on a link
navLinks.forEach(link=> {
        link.addEventListener('click', ()=> {
                navMenu.classList.remove('active');
                navToggle.classList.remove('active');
            });
    });

// Navbar scroll effect
window.addEventListener('scroll', ()=> {
        if (window.scrollY > 100) {
            navbar.style.background='rgba(255, 255, 255, 0.98)';
            navbar.style.boxShadow='0 2px 20px rgba(0, 0, 0, 0.1)';
        }

        else {
            navbar.style.background='rgba(255, 255, 255, 0.95)';
            navbar.style.boxShadow='none';
        }
    });

// Smooth scrolling for anchor links
document.querySelectorAll('a[href^="#"]').forEach(anchor=> {
        anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target=document.querySelector(this.getAttribute('href'));

                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
            }
        });
});

// Active navigation link highlighting
const sections=document.querySelectorAll('section');

const observerOptions= {
    threshold: 0.3,
        rootMargin: '-70px 0px -70px 0px'
}

;

const observer=new IntersectionObserver(entries=> {
        entries.forEach(entry=> {
                if (entry.isIntersecting) {
                    // Remove active class from all nav links
                    navLinks.forEach(link=> link.classList.remove('active'));

                    // Add active class to current section nav link
                    const activeLink=document.querySelector(`.nav-link[href="#${entry.target.id}"]`);

                    if (activeLink) {
                        activeLink.classList.add('active');
                    }
                }
            });
    }

    , observerOptions);

sections.forEach(section=> {
        observer.observe(section);
    });

// Animate elements on scroll
const animateOnScroll=()=> {
    const elements=document.querySelectorAll('.skill-category, .project-card, .stat');

    elements.forEach(element=> {
            const elementTop=element.getBoundingClientRect().top;
            const windowHeight=window.innerHeight;

            if (elementTop < windowHeight * 0.8) {
                element.style.opacity='1';
                element.style.transform='translateY(0)';
            }
        });
}

;

// Initialize animation styles
document.querySelectorAll('.skill-category, .project-card, .stat').forEach(element=> {
        element.style.opacity='0';
        element.style.transform='translateY(50px)';
        element.style.transition='opacity 0.6s ease, transform 0.6s ease';
    });

window.addEventListener('scroll', animateOnScroll);
window.addEventListener('load', animateOnScroll);

// Contact form handling
contactForm.addEventListener('submit', function(e) {
        e.preventDefault();

        // Get form data
        const formData=new FormData(this);
        const name=formData.get('name');
        const email=formData.get('email');
        const subject=formData.get('subject');
        const message=formData.get('message');

        // Simple validation
        if ( !name || !email || !subject || !message) {
            showNotification('Please fill in all fields', 'error');
            return;
        }

        if ( !isValidEmail(email)) {
            showNotification('Please enter a valid email address', 'error');
            return;
        }

        // Simulate form submission
        showNotification('Message sent successfully! I\'ll get back to you soon.', 'success');
        this.reset();
    });

// Email validation function
function isValidEmail(email) {
    const emailRegex=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
}

// Notification system
function showNotification(message, type) {
    // Remove existing notifications
    const existingNotification=document.querySelector('.notification');

    if (existingNotification) {
        existingNotification.remove();
    }

    // Create notification element
    const notification=document.createElement('div');

    notification.className=`notification $ {
        type
    }

    `;

    notification.innerHTML=` <div class="notification-content"><span>$ {
        message
    }

    </span><button class="notification-close">&times;
    </button></div>`;

    // Add notification styles
    notification.style.cssText=` position: fixed;
    top: 90px;
    right: 20px;
    z-index: 1001;
    padding: 1rem 1.5rem;
    border-radius: 10px;
    color: white;
    font-weight: 500;
    transform: translateX(100%);
    transition: transform 0.3s ease;
    max-width: 400px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    `;

    if (type==='success') {
        notification.style.background='linear-gradient(45deg, #10b981, #059669)';
    }

    else {
        notification.style.background='linear-gradient(45deg, #ef4444, #dc2626)';
    }

    document.body.appendChild(notification);

    // Animate in
    setTimeout(()=> {
            notification.style.transform='translateX(0)';
        }

        , 100);

    // Add close functionality
    const closeBtn=notification.querySelector('.notification-close');

    closeBtn.addEventListener('click', ()=> {
            notification.style.transform='translateX(100%)';
            setTimeout(()=> notification.remove(), 300);
        });

    // Auto-remove after 5 seconds
    setTimeout(()=> {
            if (notification.parentNode) {
                notification.style.transform='translateX(100%)';
                setTimeout(()=> notification.remove(), 300);
            }
        }

        , 5000);
}

// Typing animation for hero title
function typeWriter(element, text, speed=100) {
    let i=0;
    element.innerHTML='';

    function type() {
        if (i < text.length) {
            element.innerHTML+=text.charAt(i);
            i++;
            setTimeout(type, speed);
        }
    }

    type();
}

// Initialize typing animation when page loads
window.addEventListener('load', ()=> {
        const heroTitle=document.querySelector('.hero-title');

        if (heroTitle) {
            const originalText=heroTitle.innerHTML;

            setTimeout(()=> {
                    typeWriter(heroTitle, originalText, 50);
                }

                , 1000);
        }
    });

// Parallax effect for hero section
window.addEventListener('scroll', ()=> {
        const scrolled=window.pageYOffset;
        const hero=document.querySelector('.hero');

        if (hero) {
            hero.style.transform=`translateY($ {
                    scrolled * 0.5
                }

                px)`;
        }
    });

// Skills hover effect with sound (visual feedback)
document.querySelectorAll('.skill-item').forEach(item=> {
        item.addEventListener('mouseenter', function() {
                this.style.transform='scale(1.1) rotate(5deg)';
            });

        item.addEventListener('mouseleave', function() {
                this.style.transform='scale(1) rotate(0deg)';
            });
    });

// Project card 3D hover effect
document.querySelectorAll('.project-card').forEach(card=> {
        card.addEventListener('mousemove', function(e) {
                const rect=this.getBoundingClientRect();
                const x=e.clientX - rect.left;
                const y=e.clientY - rect.top;

                const centerX=rect.width / 2;
                const centerY=rect.height / 2;

                const rotateX=(y - centerY) / 10;
                const rotateY=(centerX - x) / 10;

                this.style.transform=`perspective(1000px) rotateX($ {
                        rotateX
                    }

                    deg) rotateY($ {
                        rotateY
                    }

                    deg) translateY(-10px)`;
            });

        card.addEventListener('mouseleave', function() {
                this.style.transform='perspective(1000px) rotateX(0) rotateY(0) translateY(-10px)';
            });
    });

// Counter animation for stats
function animateCounter(element, target, duration=2000) {
    let start=0;
    const increment=target / (duration / 16);

    function updateCounter() {
        start+=increment;

        if (start < target) {
            element.textContent=Math.floor(start)+'+';
            requestAnimationFrame(updateCounter);
        }

        else {
            element.textContent=target+'+';
        }
    }

    updateCounter();
}

// Trigger counter animation when stats section is visible
const statsObserver=new IntersectionObserver(entries=> {
        entries.forEach(entry=> {
                if (entry.isIntersecting) {
                    const counters=entry.target.querySelectorAll('.stat h3');

                    counters.forEach(counter=> {
                            const target=parseInt(counter.textContent);
                            animateCounter(counter, target);
                        });
                    statsObserver.unobserve(entry.target);
                }
            });
    }

    , {
    threshold: 0.5
});

const statsSection=document.querySelector('.about-stats');

if (statsSection) {
    statsObserver.observe(statsSection);
}

// Add loading animation
window.addEventListener('load', ()=> {
        const loader=document.createElement('div');
        loader.className='page-loader';
        loader.innerHTML=` <div class="loader-content" > <div class="loader-spinner" ></div> <p>Loading Portfolio...</p> </div> `;

        loader.style.cssText=` position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        color: white;
        font-family: 'Poppins', sans-serif;
        opacity: 1;
        transition: opacity 0.5s ease;
        `;

        const spinnerCSS=` .loader-spinner {
            width: 50px;
            height: 50px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-top: 3px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 1rem;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .loader-content {
            text-align: center;
        }

        `;

        const style=document.createElement('style');
        style.textContent=spinnerCSS;
        document.head.appendChild(style);

        document.body.appendChild(loader);

        // Remove loader after a short delay
        setTimeout(()=> {
                loader.style.opacity='0';

                setTimeout(()=> {
                        loader.remove();
                        style.remove();
                    }

                    , 500);
            }

            , 1500);
    });

// Add CSS for active nav link
const activeNavCSS=` .nav-link.active {
    color: #6366f1 !important;
}

.nav-link.active::after {
    width: 100% !important;
}

`;

const activeStyle=document.createElement('style');
activeStyle.textContent=activeNavCSS;
document.head.appendChild(activeStyle);